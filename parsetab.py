
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEnonassocUMINUSDIVIDE FUNCTION LPAREN MINUS NUMBER PLUS RPAREN TIMES VARIABLEstatement : expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : VARIABLEexpression : FUNCTION LPAREN expression RPAREN'
    
_lr_action_items = {'MINUS':([0,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,],[3,9,3,3,-8,-9,3,3,3,3,-6,9,3,-2,-3,-4,-5,-7,9,-10,]),'LPAREN':([0,3,4,7,8,9,10,11,14,],[4,4,4,14,4,4,4,4,4,]),'NUMBER':([0,3,4,8,9,10,11,14,],[5,5,5,5,5,5,5,5,]),'VARIABLE':([0,3,4,8,9,10,11,14,],[6,6,6,6,6,6,6,6,]),'FUNCTION':([0,3,4,8,9,10,11,14,],[7,7,7,7,7,7,7,7,]),'$end':([1,2,5,6,12,15,16,17,18,19,21,],[0,-1,-8,-9,-6,-2,-3,-4,-5,-7,-10,]),'PLUS':([2,5,6,12,13,15,16,17,18,19,20,21,],[8,-8,-9,-6,8,-2,-3,-4,-5,-7,8,-10,]),'TIMES':([2,5,6,12,13,15,16,17,18,19,20,21,],[10,-8,-9,-6,10,10,10,-4,-5,-7,10,-10,]),'DIVIDE':([2,5,6,12,13,15,16,17,18,19,20,21,],[11,-8,-9,-6,11,11,11,-4,-5,-7,11,-10,]),'RPAREN':([5,6,12,13,15,16,17,18,19,20,21,],[-8,-9,-6,19,-2,-3,-4,-5,-7,21,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,3,4,8,9,10,11,14,],[2,12,13,15,16,17,18,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','syncanalyser.py',21),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','syncanalyser.py',25),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','syncanalyser.py',26),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','syncanalyser.py',27),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','syncanalyser.py',28),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','syncanalyser.py',39),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','syncanalyser.py',43),
  ('expression -> NUMBER','expression',1,'p_expression_number','syncanalyser.py',47),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','syncanalyser.py',51),
  ('expression -> FUNCTION LPAREN expression RPAREN','expression',4,'p_expression_function','syncanalyser.py',59),
]
