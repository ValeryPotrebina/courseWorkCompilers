
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMPAREleftPLUSMINUSleftMULTDIVrightPOWnonassocUMINUSCOMPARE DIV FUNCTION LPAREN MINUS MULT NUMBER PLUS POW RPAREN VARexpression : expression COMPARE expression\n                  | expression PLUS expression\n                  | expression MINUS expression \n                  | expression MULT expression  \n                  | expression DIV expression   \n                  | expression POW expressionexpression : LPAREN expression RPARENexpression : VARexpression : NUMBERexpression : MINUS expression %prec UMINUSexpression : FUNCTION LPAREN expression RPAREN\n                  | FUNCTION VAR '
    
_lr_action_items = {'LPAREN':([0,2,3,6,7,8,9,10,11,12,15,],[3,3,3,15,3,3,3,3,3,3,3,]),'VAR':([0,2,3,6,7,8,9,10,11,12,15,],[4,4,4,16,4,4,4,4,4,4,4,]),'NUMBER':([0,2,3,7,8,9,10,11,12,15,],[5,5,5,5,5,5,5,5,5,5,]),'MINUS':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,],[2,9,2,2,-8,-9,2,2,2,2,2,2,-10,9,2,-12,9,-2,-3,-4,-5,-6,-7,9,-11,]),'FUNCTION':([0,2,3,7,8,9,10,11,12,15,],[6,6,6,6,6,6,6,6,6,6,]),'$end':([1,4,5,13,16,17,18,19,20,21,22,23,25,],[0,-8,-9,-10,-12,-1,-2,-3,-4,-5,-6,-7,-11,]),'COMPARE':([1,4,5,13,14,16,17,18,19,20,21,22,23,24,25,],[7,-8,-9,-10,7,-12,-1,-2,-3,-4,-5,-6,-7,7,-11,]),'PLUS':([1,4,5,13,14,16,17,18,19,20,21,22,23,24,25,],[8,-8,-9,-10,8,-12,8,-2,-3,-4,-5,-6,-7,8,-11,]),'MULT':([1,4,5,13,14,16,17,18,19,20,21,22,23,24,25,],[10,-8,-9,-10,10,-12,10,10,10,-4,-5,-6,-7,10,-11,]),'DIV':([1,4,5,13,14,16,17,18,19,20,21,22,23,24,25,],[11,-8,-9,-10,11,-12,11,11,11,-4,-5,-6,-7,11,-11,]),'POW':([1,4,5,13,14,16,17,18,19,20,21,22,23,24,25,],[12,-8,-9,-10,12,-12,12,12,12,12,12,12,-7,12,-11,]),'RPAREN':([4,5,13,14,16,17,18,19,20,21,22,23,24,25,],[-8,-9,-10,23,-12,-1,-2,-3,-4,-5,-6,-7,25,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,3,7,8,9,10,11,12,15,],[1,13,14,17,18,19,20,21,22,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression COMPARE expression','expression',3,'p_calc','parser.py',30),
  ('expression -> expression PLUS expression','expression',3,'p_calc','parser.py',31),
  ('expression -> expression MINUS expression','expression',3,'p_calc','parser.py',32),
  ('expression -> expression MULT expression','expression',3,'p_calc','parser.py',33),
  ('expression -> expression DIV expression','expression',3,'p_calc','parser.py',34),
  ('expression -> expression POW expression','expression',3,'p_calc','parser.py',35),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',42),
  ('expression -> VAR','expression',1,'p_expression_var','parser.py',47),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',52),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',57),
  ('expression -> FUNCTION LPAREN expression RPAREN','expression',4,'p_expression_function','parser.py',63),
  ('expression -> FUNCTION VAR','expression',2,'p_expression_function','parser.py',64),
]
